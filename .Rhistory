cov1 <- c("race","age")
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste("diabetes~",Formula, sep=""))
trial <- glm(Formula_risk,binomial,nhanes2)
emmip(trial,race, weights = "prop")
emmip(trial,race~age, weights = "prop")
source("~/emmip.R", echo=TRUE)
#uploading libraries----
library(tidyverse) #tidy universe
library(emmeans) #estimate marginals
library(ggplot2) #plotting
library(readr) #reading in files
library(haven) #import data
library(purrr) #for looping
library(readxl) #reading excel files
#reading in Stata dataset nhanes2: National Health and Nutrition Examination Survey----
nhanes2 <- read_dta("https://www.stata-press.com/data/r17/nhanes2.dta")
#setting categorical variables
for(category in c("race","sex","diabetes","heartatk")){
eval(parse(text=paste0("nhanes2$", category, "<- as.factor(nhanes2$", category, ")")))
}
#assigning covariates
cov1 <- c("race","age","sex")
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste("diabetes~",Formula, sep=""))
trial <- glm(Formula_risk,binomial,nhanes2)
emmip(trial,sex~race, weights = "prop")
emmip(trial,sex~race, weights = "prop",plotit = FALSE)
emmip(trial,sex~race, weights = "prop",plotit = FALSE,type="response")
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste("diabetes~",Formula, sep=""))
trial <- glm(diabetes~race*sex+age,binomial,nhanes2)
emmip(trial,sex~race, weights = "prop",plotit = FALSE,type="response")
emmip(trial,sex~race, weights = "prop",plotit = FALSE,type="response",cov.reduce = FALSE)
emmip(ref_grid(trial,cov.reduce = FALSE),sex~race, weights = "prop",plotit = FALSE,type="response")
emmip(ref_grid(trial,cov.keep = "age"),sex~race, weights = "prop",plotit = FALSE,type="response")
emmip(ref_grid(trial),sex~race, weights = "prop",plotit = FALSE,type="response")
emmeans(ref_grid(trial,cov.reduce = FALSE),sex~race, weights = "prop",plotit = FALSE,type="response")
emmeans(ref_grid(trial,cov.reduce = FALSE), weights = "prop",plotit = FALSE,type="response")
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex") weights = "prop",plotit = FALSE,type="response")
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE,type="response")
trial <- lm(diabetes~race*sex+age,nhanes2)
trial <- lm(as.numeric(diabetes)~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE,type="response")
table(nhanes2)
table(nhanes2$diabetes)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
risk_est <- risk_est %>%
#renaming cells for comprehensibility
as_tibble() %>%
mutate(race=rep(rep(c("White","Black","Other"),1),2)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),1))
trial <- lm(diabetes~race*sex+age,nhanes2)
nhanes2 <- nhanes2 %>%
mutate(ndiabetes=as.numeric(diabetes))
table(nhanes2$ndiabetes)
nhanes2 <- nhanes2 %>%
mutate(ndiabetes=case_when(diabetes="0"~0,TRUE~1))
nhanes2 <- nhanes2 %>%
mutate(ndiabetes=case_when(diabetes=="0"~0,TRUE~1))
table(nhanes2$ndiabetes)
trial <- lm(ndiabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
#uploading libraries----
library(tidyverse) #tidy universe
library(emmeans) #estimate marginals
library(ggplot2) #plotting
library(readr) #reading in files
library(haven) #import data
library(purrr) #for looping
library(readxl) #reading excel files
#reading in Stata dataset nhanes2: National Health and Nutrition Examination Survey----
nhanes2 <- read_dta("https://www.stata-press.com/data/r17/nhanes2.dta")
#setting categorical variables
for(category in c("race","sex")){
eval(parse(text=paste0("nhanes2$", category, "<- as.factor(nhanes2$", category, ")")))
}
#assigning covariates
cov1 <- c("race","age","weight","height","sex")
#uploading libraries----
library(tidyverse) #tidy universe
library(emmeans) #estimate marginals
library(ggplot2) #plotting
library(readr) #reading in files
library(haven) #import data
library(purrr) #for looping
library(readxl) #reading excel files
#reading in Stata dataset nhanes2: National Health and Nutrition Examination Survey----
nhanes2 <- read_dta("https://www.stata-press.com/data/r17/nhanes2.dta")
#setting categorical variables
for(category in c("race","sex")){
eval(parse(text=paste0("nhanes2$", category, "<- as.factor(nhanes2$", category, ")")))
}
#assigning covariates
cov1 <- c("race","age","weight","height","sex")
#creating formulas
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,binomial,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(trial_mod,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
risk_est <- risk_est %>%
#renaming cells for comprehensibility
as_tibble() %>%
mutate(race=rep(rep(c("White","Black","Other"),1),2)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),1))
return(risk_est)
}
diab_est <- organize("diabetes~")
#creating formulas
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(trial_mod,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
risk_est <- risk_est %>%
#renaming cells for comprehensibility
as_tibble() %>%
mutate(race=rep(rep(c("White","Black","Other"),1),2)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),1))
return(risk_est)
}
diab_est <- organize("diabetes~")
#creating formulas
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
risk_est <- risk_est %>%
#renaming cells for comprehensibility
as_tibble() %>%
mutate(race=rep(rep(c("White","Black","Other"),1),2)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),1))
return(risk_est)
}
diab_est <- organize("diabetes~")
#creating formulas
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
return(risk_est)
}
diab_est <- organize("diabetes~")
diab_est
trial <- lm(ndiabetes~race*sex+age,nhanes2)
#creating formulas
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
model_risk <- model_risk %>%
#renaming cells for comprehensibility
as_tibble() %>%
mutate(race=rep(rep(c("White","Black","Other"),1),2)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),1))
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
return(risk_est)
}
diab_est <- organize("diabetes~")
diab_est
#assigning covariates
cov1 <- c("race","age","weight","height","sex")
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
return(risk_est)
}
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#assigning covariates
cov1 <- c("race","age","weight","height","sex")
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
return(risk_est)
}
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#reading in Stata dataset nhanes2: National Health and Nutrition Examination Survey----
nhanes2 <- read_dta("https://www.stata-press.com/data/r17/nhanes2.dta")
#setting categorical variables
for(category in c("race","sex")){
eval(parse(text=paste0("nhanes2$", category, "<- as.factor(nhanes2$", category, ")")))
}
#assigning covariates
cov1 <- c("race","age","weight","height","sex")
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(ndiabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
for(category in c("race","sex")){
eval(parse(text=paste0("nhanes2$", category, "<- as.factor(nhanes2$", category, ")")))
}
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response", lty = 0) + theme_bw() +
labs(y = "Marginal probability of diabetes",
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of" + risk,
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of" + eval(parse(text=paste0(risk))),
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of" risk,
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of" risk,
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = eval(parse(text=paste0("Marginal probability of ", risk))),
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = parse(text=paste0("Marginal probability of ", risk)),
x = "Race",
colour = "")
return(risk_est)
}
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
#function to run marginal estimates on models
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of ", risk,
x = "Race",
colour = "")
return(risk_est)
}
trial <- lm(diabetes~race*sex+age,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
diab_est <- organize("diabetes~")
diab_est
trial <- glm(diabetes~race*sex+age,binomial,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE, type="response")
trial <- glm(diabetes~race*sex+age,data=nhanes2,family = binomial)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE, type="response")
#creating formulas
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- glm(Formula_risk,binomial,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmeans(model_risk,specs = c("race","sex"),weights = "prop",type = "response")
risk_est <- risk_est %>%
#renaming cells for comprehensibility
as_tibble() %>%
mutate(race=rep(rep(c("White","Black","Other"),1),2)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),1))
return(risk_est)
}
diab_est <- organize("diabetes~")
plot_diabetes <- diab_est %>%
ggplot(aes(x=race, y=prob,colour=sex,group=sex)) +
geom_pointrange(aes(x=race, y=prob, ymin=asymp.LCL, ymax=asymp.UCL),position=position_dodge(0.3),size=1.05)+
labs(y="Marginal Probabilities", x="Race",title="Risk of Diabetes",colour='', shape='')+theme_bw()
plot_diabetes
temp1 = list.files(pattern="*.dta")
list2env(lapply(setNames(temp1, make.names(gsub("*.dta$","", temp1))), read_dta), envir = .GlobalEnv)
organize <- function(unorg_data){
org_data <- unorg_data %>%
pivot_longer(cols=c(-estimates),names_to="race") %>%
pivot_wider(names_from=c(estimates))
org_data <- select(org_data, race, b, pvalue, ll, ul)
return(org_data)
}
male_diabetes <- organize(diabetes_s1)
female_diabetes <- organize(diabetes_s2)
male_heartatk <- organize(heartatk_s1)
female_heartatk <- organize(heartatk_s2)
data <- bind_rows(male_diabetes, female_diabetes, male_heartatk, female_heartatk)
data <- data %>%
mutate(type=rep(c("Diabetes","Heart Attack"),each=6)) %>%
mutate(sex=rep(rep(c("Male","Female"),each=3),2)) %>%
relocate(race, .after=type)
data_diabetes <- filter(data, type=="Diabetes")
data_heartatk <- filter(data, type=="Heart Attack")
plot_diabetes <- data_diabetes %>%
ggplot(aes(x=race, y=b,colour=sex,group=sex)) +
geom_pointrange(aes(x=race, y=b, ymin=ll, ymax=ul),position=position_dodge(0.3),size=1.05)+
labs(y="Marginal Probabilities", x="Race",title="Risk of Diabetes",colour='', shape='')+theme_bw()
plot_heartatk <- data_heartatk %>%
ggplot(aes(x=race, y=b,colour=sex,group=sex)) +
geom_pointrange(aes(x=race, y=b, ymin=ll, ymax=ul),position=position_dodge(0.3),size=1.05)+
labs(y="Marginal Probabilities", x="Race",title="Risk of Heart Attack",colour='', shape='')+theme_bw()
plot(plot_diabetes)
#setting categorical variables
for(category in c("race","sex")){
eval(parse(text=paste0("nhanes2$", category, "<- as.factor(nhanes2$", category, ")")))
}
#assigning covariates
cov1 <- c("race","age","sex")
#function to run marginal estimates on models----
organize <- function(risk){
#creating formulas to run regression on
Formula <- paste(cov1, collapse="+")
Formula_risk <- formula(paste(risk,Formula, sep=""))
#running regression
model_risk <- lm(Formula_risk,nhanes2)
#getting margins (difference compared to Stata due to grid conditioning, you
#can replicate the output in Stata by using atmeans as an option in margins)
risk_est <- emmip(model_risk,sex ~ race, type = "response") + theme_bw() +
labs(y = "Marginal probability of risk",
x = "Race",
colour = "")
return(risk_est)
}
trial <- glm(diabetes~race*sex+age,binomial,nhanes2)
emmeans(ref_grid(trial,cov.reduce = FALSE), specs = c("race","sex"), weights = "prop",plotit = FALSE, type="response")
#run regression on desired variable----
diab_est <- organize("diabetes~")
diab_est
source("~/GitLab/Ramsey Onboarding/Tidy_training.R", echo=TRUE)
setwd("~/GitLab/Ramsey Onboarding")
source("~/GitLab/Ramsey Onboarding/Tidy_training.R", echo=TRUE)
source("~/emmip.R", echo=TRUE)
source("~/emmip.R", echo=TRUE)
